from web3 import Web3

# Connect to a local Ethereum node (change the provider URL as needed)
w3 = Web3(Web3.HTTPProvider('http://localhost:8545'))

# Check connection status
if w3.isConnected():
    print("Connected to Ethereum node")

# Set the contract address and ABI
contract_address = "0x123456789..."
contract_abi = [
    {
        "constant": True,
        "inputs": [],
        "name": "getValue",
        "outputs": [{"name": "", "type": "uint256"}],
        "payable": False,
        "stateMutability": "view",
        "type": "function"
    },
    {
        "constant": False,
        "inputs": [{"name": "_newValue", "type": "uint256"}],
        "name": "setValue",
        "outputs": [],
        "payable": False,
        "stateMutability": "nonpayable",
        "type": "function"
    }
]

# Create a contract instance
contract = w3.eth.contract(address=contract_address, abi=contract_abi)

# Read the current value from the contract
current_value = contract.functions.getValue().call()
print("Current Value:", current_value)

# Set a new value in the contract
new_value = 42
txn_hash = contract.functions.setValue(new_value).transact()
w3.eth.waitForTransactionReceipt(txn_hash)
print("New Value set successfully")
